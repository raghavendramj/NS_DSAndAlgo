150  - 250 Easy
----------------
100 - 150 Medium
----------------
50 - 75 Hard


R A G H A V E N D R A
a A G H A V E N D R r
a r d H A V E N g a r
a r d n A V E h g a r
a r d n e V| a h g a r
-------------------------
R A G H A V E N D R A


Find Sum from 1 to 10


  1 + 2 + 3 + 4 +.........10
  
  //Return type functionName(paratype paraVar)
  int addNumbers(int inputNumber){
		int result = 0;
		for(int i =0; i<= 10; i++){
			result = result + i;   
		}
		return result;
  }
  
  
  square of a number
   -> input -> any number  -> integer
   -> output -> square of a number -> integer
   
   int squareANumber(int input){
		int result = 1;		
		result = input * input;		
		return result;
   }
   
   maximum of 2 numbers
   -> input -> num1, num2 / a, b => integer
   -> output -> integer => int
   
   int maxOf2Nums(int a, int b){
		int result = 0;
		if(a > b){
			result = a;
		} else {
			result = b;
		}
		return result;
   }
   
   gcd(a, b)
   hcf(a, b)
   
   153 => 1^3 + 5^3 + 3^3 => 1 + 125 + 27 => 153 
   
   Problem Statement :- Check for amstrong number
   
   input => number
   output => boolean
   
   boolean checkForAmstrong(int number){
		boolean result = false;
		
		int orig = number;
		int sum = 0;
		while(number > 0){
			int remainder = number % 10;			
			sum = sum + (remainder * remainder * remainder);
			number = number / 10;
		}
		//153 => 1^3 + 5^3 + 3^3 => 1 + 125 + 27 => 153 
		if( orig== sum)
			return true;
		else 
			return false;
   }